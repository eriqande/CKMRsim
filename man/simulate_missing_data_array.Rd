% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_missing_data_array.R
\name{simulate_missing_data_array}
\alias{simulate_missing_data_array}
\title{Simulate Qijs across multiple relevant levels of missing data}
\usage{
simulate_missing_data_array(
  LG,
  C,
  num_points = 11,
  num_cores = 1,
  tabulate_and_exit = FALSE,
  simulation_approach = "simple_miss_freq",
  ...
)
}
\arguments{
\item{LG}{the genotypes in long format.  It must have the columns
Indiv (unique IDs of the individuals), Locus, gene_copy (must be 1 or 2
denoting which of the two gene copies in a diploid each allele is), and
Allele, which must be a character. If there are any missing genotypes
in the data frame, they must appear as NAs in the Allele column.}

\item{C}{the ckmr object upon which to base the simulations.}

\item{num_points}{the number of different values between the lowest observed
number of pairwise non-missing genotypes and the highest, inclusive, that
simulations will be performed for.}

\item{num_cores}{Number of cores to parallelize the simulations over (using mclapply)
from the parallel package.  On Windows, parallelization is not available from forking
so this must remain equal to 1 on Windows.}

\item{tabulate_and_exit}{if TRUE, then the function exits after tabulating the
number of pairs with different numbers on shared non-missing genotypes, and returns
only information about that.  This is useful for getting an overview of what the
missing data structure in your data look like.}

\item{simulation_approach}{this determines how simulations should be done. The
options are:
\itemize{
\item \code{simple_miss_freq}: do simulations at \code{num_points} different values of the number
of pairwise shared genotypes, drawing the pattern of missingness from a very simple
independent random sampling model according to the frequency of missing data in all
loci.
}}

\item{...}{
  Arguments passed on to \code{\link[=simulate_Qij]{simulate_Qij}}
  \describe{
    \item{\code{sim_relats}}{a vector of names of the relationship IDs (these were the rownames
in the \code{kappa_matrix} argument to \code{\link{create_ckmr}} to simulate from.
For each relationship ID in sim_relats, genotype values will get simulated
from the \code{Y_l_true} values in \code{C}.}
    \item{\code{calc_relats}}{a vector of names of the relationship IDs to calculate the
genotype log probabilities of the simulated
genotypes from.  Genotype log probs are calculated using the Y_l matrices.}
    \item{\code{reps}}{a synonym for \code{calc_relats} for compatibility to an earlier version
of CKMRsim.}
  }}
}
\value{
This function returns a list.  More on that later.
}
\description{
Some data sets have a lot of missing markers.  If this is the case, it is not
OK to just do the simulations as if there is no missing data.  This function
wraps up a lot of different steps that can be taken to try to get more accurate
"first-pass" FPRs and FNRs for situations with a lot of missing data.
The steps are:
\itemize{
\item Tabulate the distribution of the number of informative (i.e., not missing in
either member of the pair) markers, across all pairs. (Note, this requires
that you have an actual data set that you are trying to do relationship
inference in.)
\item Estimate missingness rates per locus, and from that calculate the rate of
missingness in pairs, under a simple independence assumption.
\item Simulate Q_ij values at a series of different numbers of non-missing loci
to calculate FPRs and FNRs for those.
}
}
\details{
Note that this function requires a CKMR object \code{C} that is suitable for both
linked an unlinked simulation.  So, if you don't have that, then you best
prepare it, even if it means sprinkling your markers into a pseudogenome
as described \href{https://eriqande.github.io/tws-ckmr-2022/kin-finding-lab.html#power-for-kin-finding-while-accounting-for-physical-linkage}{here}.
}
\examples{
# this is just here for testing at the moment
LG <- read_rds("/tmp/LG.rds")
C <- read_rds("/tmp/C.rds")
}
